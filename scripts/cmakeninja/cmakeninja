#!/usr/bin/env bash

# This is a quick script to retrieve the latest cmake & ninja. It has not
# been made robust enough yet, but does the job for me.

# set -x

if [ -d $HOME ]
then
    BASEDIR="$HOME"
else
    echo "Could not detect home directory"
fi

NINJAREMOTE="https://github.com/martine/ninja.git"
NINJALOCAL="ninja"
CMAKEREMOTE="git://cmake.org/cmake.git"
CMAKELOCAL="cmake"
CMAKEINSTALL="cmakelatest"
OUTPUT=''
RESULT=0
NEWCMAKE=0
NEWNINJA=0

# retrieve / update
function retrieve {
	REMOTE=$1
	LOCAL=$2
	if [ ! -d $BASEDIR/$LOCAL ]
	then
		git clone $REMOTE
		RESULT=$?
		NEW=1
	else
		cd $BASEDIR/$LOCAL
		OUTPUT=`git pull`
		cd -
		RESULT=$?
	fi

	if [ $RESULT -ne 0 ]
	then
		echo "Failed to retrieve $LOCAL"
		exit 1
	fi
}


# MAIN
retrieve $CMAKEREMOTE $CMAKELOCAL
if [ $NEW -eq 1 ]
then
    NEWCMAKE=1
    NEW=0
fi

# If new clone for cmake, checkout to 'next' branch first
if [ $NEWCMAKE -eq 1 ]
then
	cd $BASEDIR/$CMAKELOCAL
	git checkout -t origin/next
	cd -
	RESULT=$?

	if [ $RESULT -ne 0 ]
	then
		echo "Failed to switch to next branch"
		exit 1
	fi
else
    if [ $OUTPUT != "Already up to date." ]
    then
        NEWCMAKE=1
    fi
fi

# Build cmake
if [ $NEWCMAKE -eq 1 ]
then
    rm -rf $BASEDIR/$CMAKEINSTALL
    cd $BASEDIR/$CMAKELOCAL
    ./bootstrap --prefix=$BASEDIR/$CMAKEINSTALL && make && make install
    RESULT=$?
    cd -

    if [ $RESULT -ne 0 ]
    then
        echo "Failed to build cmake"
        exit 1
    fi
fi

retrieve $NINJAREMOTE $NINJALOCAL
if [ $NEW -eq 1 ]
then
    NEWNINJA=1
    NEW=0
fi

# Build ninja
if [ $NEWNINJA -eq 1 ]
then
    cd $BASEDIR/$NINJALOCAL
    ./bootstrap.py
    RESULT=$?
    cd -

    if [ $RESULT -ne 0 ]
    then
        echo "Failed to build ninja"
        exit 1
    fi
fi
